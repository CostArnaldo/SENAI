SERVER-SIDE

Framework

Framework é um conjunto de bibliotecas utilizado para desenvolver aplicações com uma estrutura pré-definida, podendo simplificar o processo de desenvolvimento e de ganho de performance.

Linguagens de Prgramação Server-Side

Linguagem Estruturada
A programação estruturada é uma técnica que pode ser utilizada em diferentes linguagens, permitindo a construção de programas em um número restrito de estruturas.  
As  três  estruturas  são:  de  controle  de  repetição,  de  condição  e  de  sequência.

Orientada a objetos
O paradigma de programação orientado a objetos (POO ou, em inglês, OOP) surgiu como uma alternativa para aproximar a representação dos itens do mundo real aos do mundo da programação; baseia-se em classes e objetos.

Programação funcional
A programação funcional é o processo de construção de sistemas baseado em  funções puras, ou seja, evitando-se o compartilhamento de estado. 
 A partir de um dado de entrada, constrói-se uma saída esperada.

Programação imperativa
A programação imperativa é baseada em instruções e comandos, ou seja, são estabelecidas ordens sob as quais o sistema deve operar (indicando-se como e o que o sistema deve realizar).

PARADIGMA

Em programação, um paradigma é uma abordagem para resolver problemas por meio de técnicas e ferramentas disponíveis e aplicáveis a diferentes linguagens. 
São, portanto, abordagens diferentes para a criação de aplicações.
Os principais paradigmas de programação basicamente pertencem a dois grupos, imperativos  ou  declarativos.

Imperativos

-> Programação Procedural
Ela é construída por um conjunto de procedimentos (funções) programados e utilizados em várias partes do código. 
Essas funções, descritas no primeiro desafio, são criadas e agrupadas em uma unidade para realizar uma instrução ou para estruturar um bloco de funções, que são criadas em vários blocos da aplicação para,
assim, solucionar um problema maior.
Essas funções não contêm estado; uma função pode chamar outra e é difícil identificar a dependência entre elas. Portanto, é importante identificar se uma função existente é capaz de solucionar um problema que você precisa resolver.

-> Programação Orientada a Objetos
O paradigma de programação orientada a objetos (POO ou OOP, em inglês) surgiu como  uma  alternativa  para  aproximar  a  representação  dos  itens  do  mundo  real  para o mundo da programação. 
Esse paradigma se baseia em classes e objetos8 e é amplamente utilizado para estruturar projetos em pedaços reutilizáveis de código.

OOP  tem  blocos  de  construção  principais  que  são,  objetos,  classe,  interface,  polimorfismo, abstração e encapsulamento.


CONCEITOS DE OO

Encapsulamento (Ocultamento de dados)
Trata-se de reunir (“encapsular”) as propriedades e os métodos de uma determinada classe ou objeto, tornando o desenvolvimento e a manutenção do software mais simples,
 protegendo os dados de modificações e escondendo os detalhes internos da implementação. Cada objeto deve controlar e manipular o seu próprio estado. (ex. Public ou Private)

Properties
Um problema possível para o cenário apresentado no exemplo anterior é o bloqueio de escrita e de leitura da propriedade determinado pelo modificador private. 
Para casos como esse, o C# oferece um recurso chamado properties.O recurso properties permite que a classe disponibilize os valores de {get} e {set} escondendo à implementação ou verificação do código.

Abstração
No paradigma orientado a objetos, o conceito de abstração é mover o foco dos detalhes da implementação para as operações disponíveis, escondendo-os de um objeto externo.

Herança
Consideramos a herança como uma maneira de reutilização de software, na qual uma nova  classe é criada absorvendo as propriedades e os métodos da classe herdada, 
adicionando propriedades e métodos novos e eliminando a necessidade de reescrita do código.

Polimorfismo
  Por exemplo, no jogo de videogame Super Mario, há diferentes personagens que realizam, entre outras, uma mesma ação em comum: correr.
 O polimorfismo permite que cada personagem  (Mario,  Luigi  e  Yoshi) tenha seu próprio modo de correr.

Classes Abstratas
São chamadas de classes abstratas as classes que servem somente como base para outras, ou seja, surgem quando não pretendemos criar objetos (instanciar) para essa classe. 
Assim, a classe pai, em algum ponto do código, torna-se tão geral que acaba sendo vista mais como um modelo para outras classes do que como uma classe com instâncias específicas para sua utilização.

Interface
Trata-se de um recurso utilizado na orientação a objetos para diminuir a dependência entre  módulos  do  sistema  (o  que  chamamos  de  acoplamento). 
A  interface  em  programação é um tipo abstrato de dados que conterá somente a definição, mas não a implementação. A implementação será feita na classe filha e é definida por meio da palavra reservada interface. 
Quando  criada  uma  interface,  cria-se  um  contrato  que  ambas  as  partes  devem aceitar.


TRATAMENTO DE ERROS
Exceções podem ocorrer quando um programa estiver sendo executado, ou seja, situações atemporais e não esperadas pelo programa podem provocar um erro ou uma  exceção. 
Para tratar essas situações excepcionais, utilizamos a instrução try-catch.

DOCUMENTAÇÂO
Documentação em engenharia de software é um termo que abrange todos os documentos escritos, imagens e materiais relacionados  ao processo de desenvolvimento.

Readme.MD
README.md é um arquivo com extensão .md (Markdown), cujo objetivo é conter informações essenciais sobre o projeto.
Em outras palavras, o README.md é a documentação técnica geral do projeto.

Markdown Syntax
Markdown Syntax é um tipo de linguagem de marcação, assim como o HTML. A sintaxe facilita a formatação de textos na web, funcionando como um conversor de texto para HTML.

-> Títulos
A tag de título é a # (hashtag). Basta iniciar o  título com a hashtag seguido do texto. Quanto maior o número de hashtags, menor o tamanho do título.

-> Enfase
 Para ênfase, usamos o texto entre asteriscos ou underscores para itálico e duplos asteriscos ou underscores  para  negrito. É possível combiná-los.

-> Listas
Para listas ordenadas, inicie o item com o número seguido de ponto. Para listas não-ordenadas, inicie a lista com um asterisco e cada item com o sinal de + ou -.

-> Link
Para criar um hipertexto, coloque o texto a ser clicado  entre  colchetes, seguido do endereço entre parênteses. O padrão é o link abrir em uma nova janela.

-> Tabela
Inicie a tabela com uma barra vertical ou pipe, que servem para dividir as colunas.

-> Imagens
Para inserir uma imagem, use a tag <img src />, como no HTML.




